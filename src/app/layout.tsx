import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import {
  Sidebar,
  SidebarContent,
  SidebarGroup,
  SidebarGroupContent,
  SidebarGroupLabel,
  SidebarMenu,
  SidebarMenuButton,
  SidebarMenuItem,
  SidebarProvider,
  SidebarTrigger,
} from "@/components/ui/sidebar";
import EachUtils from "@/components/utils/eachUtils";
import { Suspense } from "react";
import { Loader2 } from "lucide-react";
import { Toaster } from "@/components/ui/sonner";
import Image from "next/image";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const getData = [
  {
    title: "employee",
    url: "/",
  },
  {
    title: "Salary Slip Report",
    url: "/salary-slip-report",
  },
];

const editData = [
  {
    title: "Add employee",
    url: "/employee-form",
  },
];

const items = [
  { groupName: "Get Data", list: getData },
  { groupName: "Edit Data", list: editData },
];

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SidebarProvider>
          <Sidebar>
            <SidebarContent>
              <EachUtils
                of={items}
                render={({ groupName, list }) => (
                  <SidebarGroup>
                    <SidebarGroupLabel>{groupName}</SidebarGroupLabel>
                    <SidebarGroupContent>
                      <SidebarMenu>
                        <EachUtils
                          of={list}
                          render={({ title, url }) => (
                            <SidebarMenuItem key={title}>
                              <SidebarMenuButton asChild>
                                <a href={`${url}`}>
                                  <span>{title}</span>
                                </a>
                              </SidebarMenuButton>
                            </SidebarMenuItem>
                          )}
                        />
                      </SidebarMenu>
                    </SidebarGroupContent>
                  </SidebarGroup>
                )}
              />
            </SidebarContent>
          </Sidebar>
          <main className="w-full min-h-screen">
            <nav className="sticky w-full aspect-[6.6/1] mb-8">
              <SidebarTrigger className="fixed" />
              <Image alt="" src="/kop.png" fill />
            </nav>
            <Suspense
              fallback={
                <div className="flex items-center justify-center w-full h-screen">
                  <Loader2 size={80} />
                </div>
              }
            >
              {children}
            </Suspense>
          </main>
        </SidebarProvider>
        <Toaster />
      </body>
    </html>
  );
}
